server.port=8080

spring.kafka.bootstrap-servers=localhost:9092

# ID???????????????????????
# ????client-id ???????
# spring.kafka.client-id=default

# ????
spring.kafka.producer.retries=5

# ?????
spring.kafka.producer.batch-size=16384

# ??????32M
spring.kafka.producer.buffer-memory=33554432

# ack??
spring.kafka.producer.acks=1

# ?????key?????
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer

# ?????value?????
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# ????
# spring.kafka.producer.transaction-id-prefix=kafka_tx_


# ???
spring.kafka.consumer.group-id=default_group

# ???true??????????????????????true
spring.kafka.consumer.enable-auto-commit=true

# ??????????Kafka????????????????5000
spring.kafka.consumer.auto-commit-interval=100

# ?Kafka?????????????????????????????????latest?????????????????
# ?????latest, earliest, none
spring.kafka.consumer.auto-offset-reset=earliest

# ??????????????fetch.min.bytes???????????????????????????????????
# ????500
spring.kafka.consumer.fetch-max-wait=500

# ???????????????????????????1????kafka????fetch.min.bytes?
spring.kafka.consumer.fetch-min-size=1

# ????poll()????????????????500
spring.kafka.consumer.max-poll-records=500

# ???????????????????3000
spring.kafka.consumer.heartbeat-interval=3000

# ?????key???????
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# ?????value???????
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer




# topic?????
spring.kafka.listener.missing-topics-fatal=false

# ???????????????????
spring.kafka.listener.poll-timeout=5000

# ??????????
spring.kafka.listener.ack-mode=

# ????????????? ???@KafkaListener??
# spring.kafka.listener.concurrency=4

